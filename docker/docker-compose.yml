version: "3.9"
services:
  redis:
    image: redis:7.0.12
    container_name: redis
    restart: always
    ports:
      - 6379:6379
    volumes:
      - ./redis/data:/usr/local/var/db/redis/
      - ./redis/conf/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
  mysql:
    image: mysql:8.0.31
    depends_on:
      - redis
    container_name: mysql
    restart: always
    ports:
      - "3307:3306"
    volumes:
      - ./mysql/data/mysql:/var/lib/mysql            #将容器中运行的mysql数据保存到宿主机，防止容器删除后数据丢失
      - ./mysql/init:/docker-entrypoint-initdb.d/    #/docker-entrypoint-initdb.d/这是数据库提供的初始化目录，数据库在启动时会默认执行当期目录下的以.sql或者.sh结尾的文件。
    environment:
      - MYSQL_ROOT_PASSWORD=123456                  #设置数据库密码
      - MYSQL_DATABASE=villageroad                  #设置数据库名称
      - MYSQL_USER=admin                            #设置数据库用户名
      - MYSQL_PASSWORD=admin                         #设置数据库密码
      - MYSQL_ALLOW_EMPTY_PASSWORD=false            #设置是否允许空密码
  nacos:
    image: nacos/nacos-server:v2.2.3
    depends_on:
      - mysql
    container_name: nacos
    restart: always
    ports:
      - "8848:8848"
      - "9848:9848"
    environment:
      - PREFER_HOST_MODE=hostname
      - MYSQL_DATABASE_NUM=1
      - MYSQL_SERVICE_HOST=127.0.0.1
      - MYSQL_SERVICE_PORT=3307
      - MYSQL_SERVICE_DB_NAME=nacos
      - MYSQL_SERVICE_USER=root
      - MYSQL_SERVICE_PASSWORD=123456
      - MYSQL_SERVICE_DB_PARAM=characterEncoding=utf8&connectTimeout=1000&socketTimeout=3000&autoReconnect=true&useUnicode=true&useSSL=false&serverTimezone=Asia/Shanghai
      - NACOS_AUTH_ENABLE=true
      - MODE=standalone
      - NACOS_AUTH_IDENTITY_KEY=2222
      - NACOS_AUTH_IDENTITY_VALUE=2xxx
      - NACOS_AUTH_TOKEN=SecretKey012345678901234567890123456789012345678901234567890123456789
    volumes:
#      - ./nacos/init.d:/home/nacos/init.d
      - ./nacos/logs:/home/nacos/logs
#      - ./nacos/conf:/home/nacos/conf
#  grafana:
#    container_name: grafana
#    image: grafana/grafana:latest
#    ports:
#      - 3000:3000
#    restart: on-failure
#  prometheus:
#    container_name: prometheus
#    image: prom/prometheus:latest
#    volumes:
#      - ./prometheus/prometheus-standalone.yaml:/etc/prometheus/prometheus.yml
#    ports:
#      - "9090:9090"
#    depends_on:
#      - nacos
#    restart: on-failure